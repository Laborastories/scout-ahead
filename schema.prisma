datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  isAdmin    Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Series {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  blueTeamName  String
  redTeamName   String
  matchName     String
  blueAuthToken String    @unique
  redAuthToken  String    @unique
  format        String    // "BO1", "BO3", "BO5"
  fearlessDraft Boolean   @default(false)
  games         Game[]
  status        String    @default("IN_PROGRESS") // IN_PROGRESS, COMPLETED
  winner        String?   // "BLUE" or "RED"
}

model Game {
  id          String       @id @default(uuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  series      Series       @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  seriesId    String
  gameNumber  Int
  blueSide    String      // Team name on blue side for this game
  redSide     String      // Team name on red side for this game
  status      String      @default("PENDING") // PENDING, IN_PROGRESS, COMPLETED
  winner      String?     // "BLUE" or "RED"
  actions     DraftAction[]
}

model DraftAction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId    String
  type      String   // "PICK" or "BAN"
  phase     Int      // 1, 2, 3, 4
  team      String   // "BLUE" or "RED"
  champion  String
  position  Int      // Action number in the draft (1-20)
}
